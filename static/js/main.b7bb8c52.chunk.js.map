{"version":3,"sources":["adapters/yjs/yjs.ts","contexts/yContext.ts","components/UserAvatar/index.ts","components/UserAvatar/UserAvatar.tsx","components/Header/index.ts","components/Header/Header.tsx","components/CommentEditor/index.ts","components/CommentEditor/CommentEditor.tsx","components/MenuBar/index.ts","components/MenuBar/MenuBar.tsx","prosemirror/plugins/comments/commentsKey.ts","prosemirror/plugins/comments/CommentsState.ts","prosemirror/plugins/comments/renderComment.tsx","components/Comment/index.ts","components/Comment/Comment.tsx","prosemirror/plugins/comments/CommentView.tsx","prosemirror/plugins/comments/commentsPlugin.ts","prosemirror/plugins/comments/commentNode.ts","prosemirror/marks/highlightMark.ts","prosemirror/schema.ts","prosemirror/editor/index.ts","prosemirror/editor/editor.ts","prosemirror/plugins/comments/addComment.ts","components/Editor/index.ts","components/Editor/Editor.tsx","pages/Main/index.ts","pages/Main/Main.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["yDoc","Y","yProvider","WebsocketProvider","yType","getXmlFragment","localState","awareness","getLocalState","user","color","name","setLocalStateField","colors","Math","floor","length","random","assignColor","names","assignName","yContext","createContext","UserAvatar","className","style","borderColor","Header","useState","users","setUsers","useContext","useEffect","changeListener","changes","newUsers","Array","from","getStates","map","id","content","Object","assign","on","off","CommentEditor","onClose","textRef","useRef","createPortal","onSubmit","e","current","value","preventDefault","ref","type","document","body","MenuBar","editorActions","view","highlightColor","setHighlightColor","isCommentEditorOpen","setCommentEditor","title","fontWeight","onClick","setMark","fontStyle","setBlock","onChange","target","backgroundColor","text","uuidv4","comment","commentsKey","PluginKey","CommentsState","decorations","DecorationSet","empty","this","state","i","doc","nodeSize","node","nodeAt","attrs","data","commentNodes","findInChildren","push","forEach","childNode","yState","ySyncPluginKey","getState","binding","relativeComment","absolutePositionToRelativePosition","mapping","to","set","delete","findCommentNodes","commentNode","JSON","parse","get","relativePositionToAbsolutePosition","decoration","decoColor","Decoration","inline","renderComment","create","tr","action","getMeta","actionType","addComment","deleteComment","Comment","parent","close","getPos","position","setPosition","resizeListener","window","addEventListener","removeEventListener","top","getBoundingClientRect","right","querySelector","CommentView","removeComment","dom","contentDOM","portal","createElement","classList","add","setAttribute","anchor","appendChild","pos","setMeta","dispatch","bind","selector","remove","key","commentsPlugin","getMap","Plugin","init","apply","pluginState","props","nodeViews","createDecorations","commentNodeSpec","group","atom","selectable","default","toDOM","class","parseDOM","tag","getAttrs","getAttribute","highlightMarkSpec","mark","commentMark","basicNodes","basicSchema","spec","nodes","basicMarks","marks","append","highlight","schema","Schema","editor","mount","EditorState","plugins","ySyncPlugin","yCursorPlugin","yUndoPlugin","keymap","undo","redo","baseKeymap","EditorView","focus","toggleMark","setBlockType","selection","tr1","insert","stringify","tr2","pluginAddComment","Editor","viewHost","viewRef","actionsRef","comments","setComments","destroy","values","Main","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b7bb8c52.chunk.js","sourcesContent":["import * as Y from 'yjs'\r\nimport { WebsocketProvider } from 'y-websocket'\r\n\r\nexport const yDoc = new Y.Doc()\r\nexport const yProvider = new WebsocketProvider(\r\n  'ws://localhost:1234',\r\n  'prosemirror',\r\n  yDoc,\r\n  {},\r\n)\r\nexport const yType = yDoc.getXmlFragment('prosemirror')\r\n","import { createContext } from 'react'\r\nimport { yProvider, yType } from '../adapters/yjs'\r\n\r\nconst localState = yProvider.awareness.getLocalState()\r\nif (\r\n  !localState ||\r\n  !localState.user ||\r\n  !localState.user.color ||\r\n  !localState.user.name\r\n) {\r\n  yProvider.awareness.setLocalStateField('user', {\r\n    color: assignColor(),\r\n    name: assignName(),\r\n  })\r\n}\r\n\r\nconst yContext = createContext({\r\n  yProvider,\r\n  yType,\r\n})\r\nexport default yContext\r\n\r\nfunction assignColor(): string {\r\n  const colors = [\r\n    '#b61010',\r\n    '#0d0dbb',\r\n    '#096809',\r\n    '#9b9b08',\r\n    '#914091',\r\n    '#9c620b',\r\n  ]\r\n  const randomColor = colors[Math.floor(colors.length * Math.random())]\r\n  return randomColor\r\n}\r\n\r\nfunction assignName(): string {\r\n  const names = ['Jhon', 'Roy', 'Raje', 'Olaf', 'Jake', 'Bolt']\r\n  const randomName = names[Math.floor(names.length * Math.random())]\r\n  return randomName\r\n}\r\n","import UserAvatar from './UserAvatar'\r\n\r\nexport default UserAvatar\r\n","import './UserAvatar.scss'\r\n\r\ninterface userAvatarProps {\r\n  user: {\r\n    [key: string]: any\r\n  }\r\n}\r\n\r\nexport default function UserAvatar({ user }: userAvatarProps) {\r\n  return (\r\n    <div className=\"userAvatar\" style={{ borderColor: user.color }}>\r\n      {user.name}\r\n    </div>\r\n  )\r\n}\r\n","import Header from './Header'\r\n\r\nexport default Header\r\n","import './Header.scss'\r\nimport { useState, useEffect, useContext } from 'react'\r\nimport yContext from '../../contexts/yContext'\r\nimport UserAvatar from '../UserAvatar'\r\n\r\nexport default function Header() {\r\n  const [users, setUsers] = useState([] as { [key: string]: any }[])\r\n  const { yProvider } = useContext(yContext)\r\n\r\n  useEffect(() => {\r\n    const changeListener = (changes: any) => {\r\n      const newUsers = Array.from(yProvider.awareness.getStates()).map(\r\n        ([id, content]) => Object.assign(content.user, { id }),\r\n      )\r\n      setUsers(newUsers)\r\n    }\r\n    yProvider.awareness.on('change', changeListener)\r\n    return () => yProvider.awareness.off('change', changeListener)\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  return (\r\n    <header className=\"header\">\r\n      {Array.from(users).map((user) => (\r\n        <div className=\"avaterItem\" key={user.id}>\r\n          <UserAvatar user={user} />\r\n        </div>\r\n      ))}\r\n    </header>\r\n  )\r\n}\r\n","import CommentEditor from './CommentEditor'\r\n\r\nexport default CommentEditor\r\n","import './CommentEditor.scss'\r\nimport { createPortal } from 'react-dom'\r\nimport { FormEventHandler, useRef, useContext } from 'react'\r\nimport UserAvatar from '../UserAvatar'\r\nimport yContext from '../../contexts/yContext'\r\n\r\ninterface CommentEditorProps {\r\n  onClose: (text: string) => void\r\n}\r\n\r\nexport default function CommentEditor({ onClose }: CommentEditorProps) {\r\n  const textRef = useRef<HTMLInputElement>(null)\r\n  const { yProvider } = useContext(yContext)\r\n\r\n  const submitHandler: FormEventHandler<HTMLFormElement> = (e) => {\r\n    onClose(textRef.current?.value || '')\r\n    e.preventDefault()\r\n  }\r\n  return createPortal(\r\n    <div className=\"commentEditorCover\">\r\n      <div className=\"commentEditor\">\r\n        <UserAvatar user={yProvider.awareness.getLocalState()!.user} />\r\n        <form onSubmit={submitHandler}>\r\n          <input ref={textRef} type=\"text\" />\r\n          <button type=\"submit\">➤</button>\r\n        </form>\r\n      </div>\r\n    </div>,\r\n    document.body,\r\n  )\r\n}\r\n","import MenuBar from './MenuBar'\r\n\r\nexport default MenuBar\r\n","import './MenuBar.scss'\r\nimport {\r\n  MouseEventHandler,\r\n  MutableRefObject,\r\n  useContext,\r\n  useState,\r\n} from 'react'\r\nimport { EditorView } from 'prosemirror-view'\r\nimport yContext from '../../contexts/yContext'\r\nimport { v4 as uuidv4 } from 'uuid'\r\nimport CommentEditor from '../CommentEditor'\r\n\r\ninterface MenuBarProps {\r\n  editorActions: MutableRefObject<{ [key: string]: (...args: any[]) => any }>\r\n  view: MutableRefObject<EditorView>\r\n}\r\nexport default function MenuBar({ editorActions, view }: MenuBarProps) {\r\n  const [highlightColor, setHighlightColor] = useState('#ffff00') // TODO: Add marker color selector\r\n  const [isCommentEditorOpen, setCommentEditor] = useState(false)\r\n  const { yProvider } = useContext(yContext)\r\n  const boldHandler: MouseEventHandler = (e) => {\r\n    editorActions.current.setMark('strong')\r\n    e.preventDefault()\r\n  }\r\n  const italicHandler: MouseEventHandler = (e) => {\r\n    editorActions.current.setMark('em')\r\n    e.preventDefault()\r\n  }\r\n  const paragraphHandler: MouseEventHandler = (e) => {\r\n    editorActions.current.setBlock('paragraph')\r\n    e.preventDefault()\r\n  }\r\n  const headingHandler: MouseEventHandler = (e) => {\r\n    editorActions.current.setBlock('heading')\r\n    e.preventDefault()\r\n  }\r\n  const commentHandler: MouseEventHandler = (e) => {\r\n    setCommentEditor(true)\r\n    e.preventDefault()\r\n  }\r\n\r\n  const createComment = (text: string) => {\r\n    const id = uuidv4()\r\n    const user = yProvider.awareness.getLocalState()!.user\r\n    editorActions.current.comment(id, user, text)\r\n    setCommentEditor(false)\r\n  }\r\n\r\n  const highlightHandler: MouseEventHandler = (e) => {\r\n    editorActions.current.setMark('highlight', {\r\n      color: highlightColor,\r\n    })\r\n    e.preventDefault()\r\n  }\r\n\r\n  return (\r\n    <div className=\"menuBar\">\r\n      <button\r\n        title=\"Bold\"\r\n        style={{ fontWeight: 'bold' }}\r\n        className=\"menuBtn\"\r\n        onClick={boldHandler}\r\n      >\r\n        B\r\n      </button>\r\n      <button\r\n        title=\"Italic\"\r\n        style={{ fontStyle: 'italic' }}\r\n        className=\"menuBtn\"\r\n        onClick={italicHandler}\r\n      >\r\n        I\r\n      </button>\r\n      <button title=\"Paragraph\" className=\"menuBtn\" onClick={paragraphHandler}>\r\n        P\r\n      </button>\r\n      <button title=\"Header\" className=\"menuBtn\" onClick={headingHandler}>\r\n        H\r\n      </button>\r\n      <button title=\"Marker\" className=\"menuBtn\" onClick={highlightHandler}>\r\n        🖌\r\n      </button>\r\n      <select\r\n        onChange={(e) => setHighlightColor(e.target.value)}\r\n        style={{ backgroundColor: highlightColor }}\r\n      >\r\n        <option value=\"yellow\" style={{ backgroundColor: 'yellow' }}></option>\r\n        <option value=\"green\" style={{ backgroundColor: 'green' }}></option>\r\n        <option value=\"cyan\" style={{ backgroundColor: 'cyan' }}></option>\r\n      </select>\r\n      <button title=\"Comment\" className=\"menuBtn\" onClick={commentHandler}>\r\n        💬\r\n      </button>\r\n      {isCommentEditorOpen && <CommentEditor onClose={createComment} />}\r\n    </div>\r\n  )\r\n}\r\n","import { PluginKey } from 'prosemirror-state'\r\nconst commentsKey = new PluginKey('comments')\r\nexport default commentsKey\r\n","import { EditorState, Transaction } from 'prosemirror-state'\r\nimport { Decoration, DecorationSet } from 'prosemirror-view'\r\nimport { YMap } from 'yjs/dist/src/internals'\r\nimport {\r\n  ySyncPluginKey,\r\n  relativePositionToAbsolutePosition,\r\n  absolutePositionToRelativePosition,\r\n} from 'y-prosemirror'\r\nimport commentsKey from './commentsKey'\r\nimport { Node } from 'prosemirror-model'\r\nimport renderComment from './renderComment'\r\n\r\ninterface RelativeComment {\r\n  from: any\r\n  to: any\r\n  data: {\r\n    id: string\r\n    user: user\r\n    text: string\r\n  }\r\n}\r\nexport default class CommentsState {\r\n  map: YMap<RelativeComment>\r\n  decorations = DecorationSet.empty\r\n  constructor(map: YMap<RelativeComment>) {\r\n    this.map = map\r\n  }\r\n\r\n  getCommentPos(comment: EditorComment, state: EditorState) {\r\n    for (let i = 0; i < state.doc.nodeSize; i++) {\r\n      const node = state.doc.nodeAt(i)\r\n      if (\r\n        node &&\r\n        node.type.name === 'comment' &&\r\n        node.attrs.id === comment.data.id\r\n      )\r\n        return i\r\n    }\r\n    return -1\r\n  }\r\n\r\n  findCommentNodes(state: EditorState) {\r\n    const commentNodes: Node[] = []\r\n    findInChildren(state.doc)\r\n    function findInChildren(node: Node) {\r\n      if (node.type.name === 'comment') commentNodes.push(node)\r\n      else node.content.forEach((childNode) => findInChildren(childNode))\r\n    }\r\n    return commentNodes\r\n  }\r\n\r\n  addComment(comment: EditorComment, state: EditorState) {\r\n    const yState = ySyncPluginKey.getState(state)\r\n    const { type, binding } = yState\r\n\r\n    const from = absolutePositionToRelativePosition(\r\n      comment.from,\r\n      type,\r\n      binding?.mapping,\r\n    )\r\n    const to = absolutePositionToRelativePosition(\r\n      comment.to,\r\n      type,\r\n      binding?.mapping,\r\n    )\r\n    const relativeComment: RelativeComment = {\r\n      from,\r\n      to,\r\n      data: { ...comment.data },\r\n    }\r\n    const {\r\n      data: { id },\r\n    } = relativeComment\r\n    this.map.set(id, relativeComment)\r\n  }\r\n\r\n  deleteComment(id: string) {\r\n    this.map.delete(id)\r\n  }\r\n\r\n  createDecorations(state: EditorState) {\r\n    const yState = ySyncPluginKey.getState(state)\r\n    const { doc, type, binding } = yState\r\n    if (!binding) return this.decorations\r\n\r\n    //find all comment nodes in document\r\n    const commentNodes = this.findCommentNodes(state)\r\n\r\n    const decorations: Decoration[] = []\r\n    commentNodes.forEach((commentNode) => {\r\n      const comment = JSON.parse(\r\n        commentNode.attrs['data-comment'],\r\n      ) as EditorComment\r\n      const relativeComment = this.map.get(comment.data.id)\r\n\r\n      if (!relativeComment) return\r\n\r\n      //get absolute from, to values from shared map\r\n      const from = relativePositionToAbsolutePosition(\r\n        doc,\r\n        type,\r\n        relativeComment.from,\r\n        binding?.mapping,\r\n      )\r\n      const to = relativePositionToAbsolutePosition(\r\n        doc,\r\n        type,\r\n        relativeComment.to,\r\n        binding?.mapping,\r\n      )\r\n\r\n      if (!from || !to) {\r\n        return\r\n      }\r\n      comment.from = from\r\n      comment.to = to\r\n\r\n      const decoration = renderComment(comment)\r\n\r\n      decorations.push(decoration)\r\n    })\r\n\r\n    this.decorations = DecorationSet.create(state.doc, decorations)\r\n    return this.decorations\r\n  }\r\n\r\n  apply(tr: Transaction, state: EditorState) {\r\n    const action = tr.getMeta(commentsKey)\r\n    const actionType = action && action.type\r\n    if (action && actionType) {\r\n      if (actionType === 'newComment') this.addComment(action.comment, state)\r\n      else if (actionType === 'deleteComment') this.deleteComment(action.id)\r\n    }\r\n    return this\r\n  }\r\n\r\n  static init(map: YMap<EditorComment>) {\r\n    return new CommentsState(map)\r\n  }\r\n}\r\n","import { Decoration } from 'prosemirror-view'\r\n\r\nexport default function renderComment(comment: EditorComment) {\r\n  const { from, to, data } = comment\r\n  const decoColor = data.user.color + '80'\r\n  return Decoration.inline(from, to, {\r\n    style: `background-color: ${decoColor}`,\r\n  })\r\n}\r\n","import Comment from './Comment'\r\n\r\nexport default Comment\r\n","import './Comment.scss'\r\nimport { useEffect, useState } from 'react'\r\nimport UserAvatar from '../UserAvatar'\r\n\r\ninterface CommentProps {\r\n  parent: HTMLElement\r\n  comment: EditorComment\r\n  close: () => void\r\n}\r\n\r\nexport default function Comment({ parent, comment, close }: CommentProps) {\r\n  const [position, setPosition] = useState(getPos())\r\n\r\n  useEffect(() => {\r\n    setPosition(getPos())\r\n\r\n    const resizeListener = (e: UIEvent) => {\r\n      setPosition(getPos())\r\n    }\r\n\r\n    window.addEventListener('resize', resizeListener)\r\n\r\n    return () => window.removeEventListener('resize', resizeListener)\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  return (\r\n    <div style={position} className=\"commentCard\">\r\n      <UserAvatar user={comment.data.user} />\r\n      <button onClick={() => close()}>✖</button>\r\n      <div className=\"content\">{comment.data.text}</div>\r\n    </div>\r\n  )\r\n\r\n  function getPos(): { top: number; right: number } {\r\n    try {\r\n      const { top } = parent.getBoundingClientRect()\r\n      const { right } = document\r\n        .querySelector('.editor')!\r\n        .getBoundingClientRect()\r\n      return { top, right: right - 990 }\r\n    } catch (e) {\r\n      return position || { top: 0, right: 0 }\r\n    }\r\n  }\r\n}\r\n","import { Node } from 'prosemirror-model'\r\nimport { EditorView, NodeView } from 'prosemirror-view'\r\nimport { createPortal } from 'react-dom'\r\nimport { ReactPortal } from 'react'\r\nimport Comment from '../../../components/Comment'\r\nimport commentsKey from './commentsKey'\r\n\r\nexport default class CommentView implements NodeView {\r\n  node\r\n  dom: HTMLElement | undefined\r\n  contentDOM: HTMLElement | undefined\r\n  view: EditorView\r\n  portal: ReactPortal | undefined\r\n  addComment: (portal: ReactPortal) => void\r\n  removeComment: (id: string) => void\r\n  getPos: () => number\r\n\r\n  constructor(\r\n    node: Node,\r\n    view: EditorView,\r\n    getPos: boolean | (() => number),\r\n    addComment: (portal: ReactPortal) => void,\r\n    removeComment: (id: string) => void,\r\n  ) {\r\n    this.node = node\r\n    this.view = view\r\n    this.addComment = addComment\r\n    this.removeComment = removeComment\r\n    this.getPos = getPos as () => number\r\n  }\r\n\r\n  init() {\r\n    const comment = JSON.parse(this.node.attrs['data-comment']) as EditorComment\r\n    //node rendering\r\n    this.dom = document.createElement('comment')\r\n    this.dom.classList.add('comment-ref')\r\n    this.dom.setAttribute('data-comment', this.node.attrs['data-comment'])\r\n    //portal anchor\r\n    const anchor = document.createElement('div')\r\n    anchor.classList.add('comment-anchor')\r\n    anchor.id = comment.data.id\r\n    document.body.appendChild(anchor)\r\n\r\n    const deleteComment = () => {\r\n      const pos = this.getPos()\r\n      const state = this.view.state\r\n      const tr = state.tr\r\n        .delete(pos, pos + 1)\r\n        .setMeta(commentsKey, { type: 'deleteComment', id: comment.data.id })\r\n      this.view.dispatch(tr)\r\n    }\r\n\r\n    const portal = createPortal(\r\n      <Comment\r\n        parent={this.dom}\r\n        comment={comment}\r\n        close={deleteComment.bind(this)}\r\n      />,\r\n      anchor,\r\n      comment.data.id,\r\n    )\r\n    this.portal = portal\r\n    this.addComment(portal)\r\n\r\n    return this\r\n  }\r\n\r\n  destroy() {\r\n    //remove anchor\r\n    const comment = JSON.parse(this.node.attrs['data-comment']) as EditorComment\r\n    const selector = `[id=\"${comment.data.id}\"]`\r\n    document.querySelector(selector)?.remove()\r\n\r\n    //remove portal from state\r\n    if (this.portal?.key) this.removeComment(this.portal.key as string)\r\n\r\n    //remove comment from shared map\r\n    const tr = this.view.state.tr.setMeta(commentsKey, {\r\n      type: 'deleteComment',\r\n      id: comment.data.id,\r\n    })\r\n    this.view.dispatch(tr)\r\n  }\r\n}\r\n\r\nexport const commentView = (\r\n  node: Node,\r\n  view: EditorView,\r\n  getPos: boolean | (() => number),\r\n  addComment: (portal: ReactPortal) => void,\r\n  removeComment: (id: string) => void,\r\n) => {\r\n  return new CommentView(node, view, getPos, addComment, removeComment)\r\n}\r\n","import { Plugin } from 'prosemirror-state'\r\nimport { Doc } from 'yjs/dist/src/internals'\r\nimport CommentsState from './CommentsState'\r\nimport commentsKey from './commentsKey'\r\nimport { ReactPortal } from 'react'\r\nimport CommentView from './CommentView'\r\n\r\nconst commentsPlugin = (\r\n  yDoc: Doc,\r\n  addComment: (comment: ReactPortal) => void,\r\n  removeComment: (id: string) => void,\r\n) => {\r\n  const map = yDoc.getMap('prosemirror-comments')\r\n  return new Plugin({\r\n    key: commentsKey,\r\n    state: {\r\n      init: () => CommentsState.init(map),\r\n      apply: (tr, pluginState, state) => pluginState.apply(tr, state),\r\n    },\r\n    props: {\r\n      nodeViews: {\r\n        comment(node, view, getPos) {\r\n          return new CommentView(\r\n            node,\r\n            view,\r\n            getPos,\r\n            addComment,\r\n            removeComment,\r\n          ).init()\r\n        },\r\n      },\r\n      decorations(state) {\r\n        return this.getState(state).createDecorations(state)\r\n      },\r\n    },\r\n  })\r\n}\r\nexport default commentsPlugin\r\n","import { NodeSpec } from 'prosemirror-model'\r\nconst commentNodeSpec: NodeSpec = {\r\n  group: 'inline',\r\n  inline: true,\r\n  atom: true,\r\n  selectable: false,\r\n\r\n  content: '',\r\n  attrs: {\r\n    'data-comment': { default: '' },\r\n  },\r\n  toDOM: (node) => [\r\n    'span',\r\n    { class: 'comment-ref', 'data-comment': node.attrs['data-comment'] },\r\n  ],\r\n  parseDOM: [\r\n    {\r\n      tag: 'span.comment-ref',\r\n      getAttrs(dom) {\r\n        return {\r\n          'data-comment': (dom as HTMLElement).getAttribute('data-comment'),\r\n        }\r\n      },\r\n    },\r\n  ],\r\n}\r\nexport default commentNodeSpec\r\n","import { MarkSpec, Mark } from 'prosemirror-model'\r\n\r\nconst highlightMarkSpec: MarkSpec = {\r\n  group: 'inline',\r\n  content: 'inline* text*',\r\n  inline: true,\r\n  selectable: true,\r\n  attrs: { color: { default: '#ff0000' } },\r\n  toDOM: (mark: Mark, inline: boolean) => {\r\n    const commentMark = document.createElement('span')\r\n    commentMark.classList.add('highlight')\r\n    commentMark.id = mark.attrs.id\r\n    commentMark.style.backgroundColor = mark.attrs.color\r\n    return commentMark\r\n  },\r\n  parseDOM: [{ tag: 'span.highlight' }],\r\n}\r\nexport default highlightMarkSpec\r\n","import { schema as basicSchema } from 'prosemirror-schema-basic'\r\nimport { Schema, NodeSpec, MarkSpec } from 'prosemirror-model'\r\nimport OrderedMap from 'orderedmap'\r\nimport { commentNodeSpec } from './plugins/comments'\r\nimport highlightMarkSpec from './marks/highlightMark'\r\n\r\nconst basicNodes = basicSchema.spec.nodes as OrderedMap<NodeSpec>\r\nconst basicMarks = basicSchema.spec.marks as OrderedMap<MarkSpec>\r\nconst nodes = basicNodes.append({\r\n  comment: commentNodeSpec,\r\n})\r\nconst marks = basicMarks.append({\r\n  highlight: highlightMarkSpec,\r\n})\r\n\r\nconst schema = new Schema({\r\n  nodes,\r\n  marks,\r\n})\r\n\r\nexport default schema\r\n","import { editor } from './editor'\r\n\r\nexport default editor\r\n","import { EditorView } from 'prosemirror-view'\r\nimport { EditorState } from 'prosemirror-state'\r\nimport schema from '../schema'\r\nimport { keymap } from 'prosemirror-keymap'\r\nimport { baseKeymap, toggleMark, setBlockType } from 'prosemirror-commands'\r\nimport {\r\n  ySyncPlugin,\r\n  yCursorPlugin,\r\n  yUndoPlugin,\r\n  undo,\r\n  redo,\r\n} from 'y-prosemirror'\r\nimport {\r\n  commentsPlugin,\r\n  addComment as pluginAddComment,\r\n} from '../../prosemirror/plugins/comments'\r\nimport { yProvider, yType, yDoc } from '../../adapters/yjs'\r\nimport { ReactPortal } from 'react'\r\n\r\nexport const editor = (\r\n  mount: Node,\r\n  addComment: (comment: ReactPortal) => void,\r\n  removeComment: (id: string) => void,\r\n) => {\r\n  const state = EditorState.create({\r\n    schema,\r\n    plugins: [\r\n      ySyncPlugin(yType),\r\n      yCursorPlugin(yProvider.awareness),\r\n      yUndoPlugin(),\r\n      keymap({ 'mod-z': undo, 'mod-y': redo }),\r\n      keymap(baseKeymap),\r\n      commentsPlugin(yDoc, addComment, removeComment),\r\n    ],\r\n  })\r\n\r\n  const view = new EditorView(mount, { state })\r\n  view.focus()\r\n\r\n  const editorActions = {\r\n    setMark(mark: string, attrs?: { [key: string]: any }) {\r\n      view.focus()\r\n      toggleMark(schema.marks[mark], attrs)(view.state, view.dispatch)\r\n    },\r\n    setBlock(node: 'paragraph' | 'heading', attrs?: { [key: string]: any }) {\r\n      view.focus()\r\n      setBlockType(schema.nodes[node], attrs)(view.state, view.dispatch)\r\n    },\r\n    comment(id: string, user: user, text: string) {\r\n      view.focus()\r\n      pluginAddComment(id, user, text)(view)\r\n    },\r\n  }\r\n  return { view, editorActions }\r\n}\r\n","import { EditorView } from 'prosemirror-view'\r\nimport commentsKey from './commentsKey'\r\n\r\nexport default function addComment(id: string, user: user, text: string) {\r\n  return (view: EditorView) => {\r\n    const { from, to } = view.state.selection\r\n    if (to <= from || !from || !to) return false\r\n    const data = { id, user, text }\r\n    const comment: EditorComment = { from, to, data }\r\n    //add comment node to doc\r\n    const tr1 = view.state.tr.insert(\r\n      from,\r\n      view.state.schema.node('comment', {\r\n        'data-comment': JSON.stringify(comment),\r\n      }),\r\n    )\r\n    view.dispatch(tr1)\r\n    //add comment range data after comment node changed doc\r\n    const tr2 = view.state.tr.setMeta(commentsKey, {\r\n      type: 'newComment',\r\n      comment,\r\n    })\r\n    view.dispatch(tr2)\r\n\r\n    //TODO: check if tr1 can be applied to state & change range accordingly to dispatch once\r\n  }\r\n}\r\n","import Editor from './Editor'\r\n\r\nexport default Editor\r\n","import './Editor.scss'\r\nimport { EditorView } from 'prosemirror-view'\r\nimport 'prosemirror-view/style/prosemirror.css'\r\nimport {\r\n  useEffect,\r\n  useRef,\r\n  MutableRefObject,\r\n  useState,\r\n  ReactPortal,\r\n} from 'react'\r\n\r\nimport MenuBar from '../MenuBar'\r\nimport editor from '../../prosemirror/editor'\r\n\r\nexport default function Editor() {\r\n  const viewHost = useRef() as MutableRefObject<HTMLDivElement>\r\n  const viewRef = useRef() as MutableRefObject<EditorView>\r\n  const actionsRef = useRef({} as { [key: string]: any })\r\n  const [comments, setComments] = useState<{ [key: string]: ReactPortal }>({})\r\n\r\n  const addComment = (comment: ReactPortal) => {\r\n    comments[comment.key as string] = comment\r\n    setComments({ ...comments })\r\n  }\r\n  const removeComment = (id: string) => {\r\n    delete comments[id]\r\n    setComments({ ...comments })\r\n  }\r\n\r\n  useEffect(() => {\r\n    const { view, editorActions } = editor(\r\n      viewHost.current,\r\n      addComment,\r\n      removeComment,\r\n    )\r\n    viewRef.current = view\r\n    actionsRef.current = editorActions\r\n    return () => view.destroy()\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  useEffect(() => {}, [comments])\r\n\r\n  return (\r\n    <>\r\n      <MenuBar editorActions={actionsRef} view={viewRef} />\r\n      <div className=\"editor\" ref={viewHost} />\r\n      {Object.values(comments)}\r\n    </>\r\n  )\r\n}\r\n","import Main from './Main'\r\n\r\nexport default Main\r\n","import Editor from '../../components/Editor'\r\n\r\nexport default function Main() {\r\n  return (\r\n    <>\r\n      <Editor />\r\n    </>\r\n  )\r\n}\r\n","import './App.scss'\nimport Header from './components/Header'\nimport Main from './pages/Main'\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Main />\n    </div>\n  )\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\nimport reportWebVitals from './reportWebVitals'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n)\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals()\r\n"],"sourceRoot":""}