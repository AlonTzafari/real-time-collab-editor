{"version":3,"sources":["adapters/yjs/yjs.ts","contexts/yContext.ts","components/UserAvatar/index.ts","components/UserAvatar/UserAvatar.tsx","components/Header/index.ts","components/Header/Header.tsx","prosemirror/nodes/commentNode.ts","prosemirror/marks/highlightMark.ts","prosemirror/schema.ts","components/MenuBar/index.ts","components/MenuBar/MenuBar.tsx","components/Comment/index.ts","components/Comment/Comment.tsx","prosemirror/nodeViews/CommentView.tsx","components/Editor/index.ts","components/Editor/Editor.tsx","pages/Main/index.ts","pages/Main/Main.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["yDoc","Y","yProvider","WebsocketProvider","yType","getXmlFragment","awareness","setLocalStateField","color","colors","randomColor","Math","floor","length","random","userColors","Array","from","getStates","map","user","i","includes","assignColor","yContext","createContext","UserAvatar","className","style","backgroundColor","id","toString","Header","useState","users","setUsers","useContext","useEffect","changeListener","changes","newUsers","content","Object","assign","on","off","commentNodeSpec","attrs","default","text","parseDOM","tag","highlightMarkSpec","group","inline","selectable","toDOM","mark","commentMark","document","createElement","classList","add","nodes","basicSchema","spec","marks","append","highlight","comment","schema","Schema","MenuBar","editorActions","view","highlightColor","title","fontWeight","onClick","e","setMark","preventDefault","fontStyle","setBlock","getLocalState","prompt","uuidv4","Comment","parent","viewHost","getPos","position","setPosition","resizeListener","window","addEventListener","removeEventListener","borderColor","top","getBoundingClientRect","left","current","CommentView","node","addComment","dom","contentDOM","portal","this","commentCard","body","createPortal","Editor","useRef","viewRef","comments","setComments","push","state","EditorState","create","plugins","ySyncPlugin","yCursorPlugin","yUndoPlugin","keymap","undo","redo","baseKeymap","EditorView","nodeViews","init","focus","destroy","console","log","toggleMark","dispatch","setBlockType","wrapSelection","wrapIn","ref","Main","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"sXAGMA,EAAO,IAAIC,IACJC,EAAY,IAAIC,IAC3B,sBACA,cACAH,GAEWI,EAAQJ,EAAKK,eAAe,eCNzCH,EAAUI,UAAUC,mBAAmB,OAAQ,CAAEC,MAOjD,WACE,IAAMC,EAAS,CACb,UACA,UACA,UACA,UACA,UACA,WAEIC,EAAcD,EAAOE,KAAKC,MAAMH,EAAOI,OAASF,KAAKG,WACrDC,EAAaC,MAAMC,KAAKf,EAAUI,UAAUY,aAAaC,KAC7D,gEAAuBC,YAAvB,aAAiB,EAAYZ,SAE/B,GAA0B,IAAtBO,EAAWF,OAAc,OAAOH,EACpC,IAAK,IAAIW,EAAI,EAAGA,EAAIZ,EAAOI,OAAQQ,IACjC,IAAIN,EAAWO,SAASb,EAAOY,IAC1B,OAAOZ,EAAOY,GAErB,OAAOX,EAzB+Ca,KACxD,IAIeC,EAJEC,wBAAc,CAC7BvB,YACAE,U,iBCJasB,MCMA,YAAgD,IAA1BN,EAAyB,EAAzBA,KACnC,OACE,qBAAKO,UAAU,aAAaC,MAAO,CAAEC,gBAAiBT,EAAKZ,OAA3D,SACGY,EAAKU,GAAGC,cCTAC,MCGA,WACb,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACQjC,EAAckC,qBAAWZ,GAAzBtB,UAcR,OAZAmC,qBAAU,WACR,IAAMC,EAAiB,SAACC,GACtB,IAAMC,EAAWxB,MAAMC,KAAKf,EAAUI,UAAUY,aAAaC,KAC3D,mCAAEW,EAAF,KAAMW,EAAN,YAAmBC,OAAOC,OAAOF,EAAQrB,KAAM,CAAEU,UAEnDK,EAASK,IAGX,OADAtC,EAAUI,UAAUsC,GAAG,SAAUN,GAC1B,kBAAMpC,EAAUI,UAAUuC,IAAI,SAAUP,MAE9C,IAGD,wBAAQX,UAAU,SAAlB,SACGX,MAAMC,KAAKiB,GAAOf,KAAI,SAACC,GAAD,OACrB,cAAC,EAAD,CAA0BA,KAAMA,GAAfA,EAAKU,U,+BCdfgB,EATmB,CAChCL,QAAS,QACTM,MAAO,CACLjB,GAAI,CAAEkB,QAAS,GACf5B,KAAM,CAAE4B,QAAS,CAAElB,GAAI,EAAGtB,MAAO,SACjCyC,KAAM,CAAED,QAAS,KAEnBE,SAAU,CAAC,CAAEC,IAAK,kBCSLC,EAfqB,CAClCC,MAAO,SACPZ,QAAS,gBACTa,QAAQ,EACRC,YAAY,EACZR,MAAO,CAAEvC,MAAO,CAAEwC,QAAS,YAC3BQ,MAAO,SAACC,EAAYH,GAClB,IAAMI,EAAcC,SAASC,cAAc,QAI3C,OAHAF,EAAYG,UAAUC,IAAI,aAC1BJ,EAAY5B,GAAK2B,EAAKV,MAAMjB,GAC5B4B,EAAY9B,MAAMC,gBAAkB4B,EAAKV,MAAMvC,MACxCkD,GAETR,SAAU,CAAC,CAAEC,IAAK,oBCPdY,EAFaC,IAAYC,KAAKF,MAG9BG,EAFaF,IAAYC,KAAKC,MAEXC,OAAO,CAC9BC,UAAWhB,EACXiB,QAASvB,IAQIwB,EALA,IAAIC,IAAO,CACxBR,QACAG,U,+CCdaM,MCaA,YAAyD,IAAtCC,EAAqC,EAArCA,cAChC,GADqE,EAAtBC,KACHzC,mBAAS,YAArD,mBAAO0C,EAAP,KACQzE,GADR,KACsBkC,qBAAWZ,GAAzBtB,WAkCR,OACE,sBAAKyB,UAAU,UAAf,UACE,wBACEiD,MAAM,OACNhD,MAAO,CAAEiD,WAAY,QACrBlD,UAAU,UACVmD,QAvCiC,SAACC,GACtCN,EAAcO,QAAQ,UACtBD,EAAEE,kBAiCA,eAQA,wBACEL,MAAM,SACNhD,MAAO,CAAEsD,UAAW,UACpBvD,UAAU,UACVmD,QA3CmC,SAACC,GACxCN,EAAcO,QAAQ,MACtBD,EAAEE,kBAqCA,eAQA,wBAAQL,MAAM,YAAYjD,UAAU,UAAUmD,QA3CN,SAACC,GAC3CN,EAAcU,SAAS,aACvBJ,EAAEE,kBAyCA,eAGA,wBAAQL,MAAM,SAASjD,UAAU,UAAUmD,QA1CL,SAACC,GACzCN,EAAcU,SAAS,WACvBJ,EAAEE,kBAwCA,eAGA,wBAAQL,MAAM,SAASjD,UAAU,UAAUmD,QA/BH,SAACC,GAC3CN,EAAcO,QAAQ,YAAa,CACjCxE,MAAOmE,IAETI,EAAEE,kBA2BA,0BAGA,wBAAQL,MAAM,UAAUjD,UAAU,UAAUmD,QA5CN,SAACC,GACzC,IAAM3D,EAAOlB,EAAUI,UAAU8E,gBAAiBhE,KAC5C6B,EAAOoC,OAAO,iBACpBZ,EAAcO,QAAQ,UAAW,CAC/BlD,GAAIwD,cACJlE,OACA6B,SAEF8B,EAAEE,kBAoCA,8B,oDC5ESM,MCOA,YAKG,IAJhBC,EAIe,EAJfA,OACAC,EAGe,EAHfA,SACArE,EAEe,EAFfA,KACA6B,EACe,EADfA,KAEA,EAAgChB,mBAASyD,KAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KAYA,OAVAvD,qBAAU,WACRuD,EAAYF,KACZ,IAAMG,EAAiB,SAACd,GACtBa,EAAYF,MAGd,OADAI,OAAOC,iBAAiB,SAAUF,GAC3B,kBAAMC,OAAOE,oBAAoB,SAAUH,MAEjD,IAGD,qBACEjE,MAAK,2BAAO+D,GAAP,IAAiBM,YAAa7E,EAAKZ,QACxCmB,UAAU,cAFZ,SAIGsB,IAIL,SAASyC,IAGP,MAAO,CAAEQ,IAFOV,EAAOW,wBAAfD,IAEME,KADeX,EAASY,QAAQF,wBAAtCC,KACyB,OCjCxBE,EAAb,WASE,WACEC,EACA7B,EACAgB,EACAc,EACAf,GACC,yBAdHc,UAcE,OAbFE,SAaE,OAZFC,gBAYE,OAXFhC,UAWE,OAVFe,cAUE,OATFkB,YASE,OARFH,gBAQE,EACAI,KAAKL,KAAOA,EACZK,KAAKlC,KAAOA,EACZkC,KAAKJ,WAAaA,EAClBI,KAAKnB,SAAWA,EAnBpB,wCAsBE,WACEmB,KAAKH,IAAM9C,SAASC,cAAc,QAClCgD,KAAKH,IAAI5C,UAAUC,IAAI,WACvB8C,KAAKH,IAAI3E,GAAK8E,KAAKL,KAAKxD,MAAMjB,GAC9B8E,KAAKH,IAAI7E,MAAMqE,YAAcW,KAAKL,KAAKxD,MAAM3B,KAAKZ,MAClD,IAAMqG,EAAclD,SAASC,cAAc,OAC3CiD,EAAYhD,UAAUC,IAAI,kBAC1BH,SAASmD,KAAK3C,OAAO0C,GACrB,IAAMF,EAASI,uBACb,cAAC,EAAD,CACEvB,OAAQoB,KAAKH,IACbhB,SAAUmB,KAAKnB,SACfrE,KAAMwF,KAAKL,KAAKxD,MAAM3B,KACtB6B,KAAM2D,KAAKL,KAAKxD,MAAME,OAExB4D,EACAD,KAAKL,KAAKxD,MAAMjB,IAKlB,OAHA8E,KAAKD,OAASA,EACdC,KAAKJ,WAAWG,GAETC,SA3CX,KCJeI,MC6BA,WACb,IAAMvB,EAAWwB,mBACXC,EAAUD,mBAChB,EAA6B7E,qBAAWZ,GAAhCtB,EAAR,EAAQA,UAAWE,EAAnB,EAAmBA,MACnB,EAAgC6B,mBAAS,IAAzC,mBAAOkF,EAAP,KAAiBC,EAAjB,KAEMZ,EAAa,SAACnC,GAClB8C,EAASE,KAAKhD,GACd+C,EAAY,YAAID,KAGlB9E,qBAAU,WACR,IAAMiF,EAAQC,IAAYC,OAAO,CAC/BlD,SAEAmD,QAAS,CACPC,YAAYtH,GACZuH,YAAczH,EAAUI,WACxBsH,cACAC,YAAO,CAAE,QAASC,IAAM,QAASC,MACjCF,YAAOG,QAGXd,EAAQb,QAAU,IAAI4B,IAAWxC,EAASY,QAAS,CACjDiB,QACAY,UAAW,CACT7D,QADS,SACDkC,EAAM7B,EAAMgB,GAClB,OAAO,IAAIY,EACTC,EACA7B,EACAgB,EACAc,EACAf,GACA0C,WAIR,IAAiBzD,EAASwC,EAAlBb,QAER,OADA3B,EAAK0D,QACE,kBAAM1D,EAAK2D,aAEjB,IAEHhG,qBAAU,WACRiG,QAAQC,IAAIpB,KACX,CAACA,IAEJ,IAAM1C,EAAgB,CACpBO,QADoB,SACZvB,EAAcV,GACpB,IAAiB2B,EAASwC,EAAlBb,QACR3B,EAAK0D,QACLI,YAAWlE,EAAOJ,MAAMT,GAAOV,EAA/ByF,CAAsC9D,EAAK4C,MAAO5C,EAAK+D,WAEzDtD,SANoB,SAMXoB,EAA+BxD,GACtC,IAAiB2B,EAASwC,EAAlBb,QACR3B,EAAK0D,QACLM,YAAapE,EAAOP,MAAMwC,GAAOxD,EAAjC2F,CAAwChE,EAAK4C,MAAO5C,EAAK+D,WAE3DE,cAXoB,SAYlBpC,EACAxD,GAEA,IAAiB2B,EAASwC,EAAlBb,QACR3B,EAAK0D,QACLQ,YAAOtE,EAAOP,MAAMwC,GAAOxD,EAA3B6F,CAAkClE,EAAK4C,MAAO5C,EAAK+D,YAIvD,OACE,qCACE,cAAC,EAAD,CAAShE,cAAeA,EAAeC,KAAMwC,IAC7C,qBAAKvF,UAAU,SAASkH,IAAKpD,IAC5B0B,MCrGQ2B,MCAA,WACb,OACE,mCACE,cAAC,EAAD,OCDS,SAASC,IACtB,OACE,sBAAKpH,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,OCNN,IAYeqH,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFhG,SAASiG,eAAe,SAM1BZ,M","file":"static/js/main.b0d16689.chunk.js","sourcesContent":["import * as Y from 'yjs'\r\nimport { WebsocketProvider } from 'y-websocket'\r\n\r\nconst yDoc = new Y.Doc()\r\nexport const yProvider = new WebsocketProvider(\r\n  'ws://localhost:8080',\r\n  'prosemirror',\r\n  yDoc,\r\n)\r\nexport const yType = yDoc.getXmlFragment('prosemirror')\r\n","import { createContext } from 'react'\r\nimport { yProvider, yType } from '../adapters/yjs'\r\n\r\nyProvider.awareness.setLocalStateField('user', { color: assignColor() })\r\nconst yContext = createContext({\r\n  yProvider,\r\n  yType,\r\n})\r\nexport default yContext\r\n\r\nfunction assignColor(): string {\r\n  const colors = [\r\n    '#ff0000',\r\n    '#0000ff',\r\n    '#008000',\r\n    '#ffff00',\r\n    '#ee82ee',\r\n    '#008833',\r\n  ]\r\n  const randomColor = colors[Math.floor(colors.length * Math.random())]\r\n  const userColors = Array.from(yProvider.awareness.getStates()).map(\r\n    ([id, state]) => state.user?.color,\r\n  )\r\n  if (userColors.length === 1) return randomColor\r\n  for (let i = 0; i < colors.length; i++) {\r\n    if (userColors.includes(colors[i])) continue\r\n    else return colors[i]\r\n  }\r\n  return randomColor\r\n}\r\n","import UserAvatar from './UserAvatar'\r\n\r\nexport default UserAvatar\r\n","import './UserAvatar.scss'\r\n\r\ninterface userAvatarProps {\r\n  user: {\r\n    [key: string]: any\r\n  }\r\n}\r\n\r\nexport default function UserAvatar({ user }: userAvatarProps) {\r\n  return (\r\n    <div className=\"userAvatar\" style={{ backgroundColor: user.color }}>\r\n      {user.id.toString()}\r\n    </div>\r\n  )\r\n}\r\n","import Header from './Header'\r\n\r\nexport default Header\r\n","import './Header.scss'\r\nimport { useState, useEffect, useContext } from 'react'\r\nimport yContext from '../../contexts/yContext'\r\nimport UserAvatar from '../UserAvatar'\r\n\r\nexport default function Header() {\r\n  const [users, setUsers] = useState([] as { [key: string]: any }[])\r\n  const { yProvider } = useContext(yContext)\r\n\r\n  useEffect(() => {\r\n    const changeListener = (changes: any) => {\r\n      const newUsers = Array.from(yProvider.awareness.getStates()).map(\r\n        ([id, content]) => Object.assign(content.user, { id }),\r\n      )\r\n      setUsers(newUsers)\r\n    }\r\n    yProvider.awareness.on('change', changeListener)\r\n    return () => yProvider.awareness.off('change', changeListener)\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  return (\r\n    <header className=\"header\">\r\n      {Array.from(users).map((user) => (\r\n        <UserAvatar key={user.id} user={user} />\r\n      ))}\r\n    </header>\r\n  )\r\n}\r\n","import { MarkSpec } from 'prosemirror-model'\r\nconst commentNodeSpec: MarkSpec = {\r\n  content: 'text*',\r\n  attrs: {\r\n    id: { default: 0 },\r\n    user: { default: { id: 0, color: '#FFF' } },\r\n    text: { default: '' },\r\n  },\r\n  parseDOM: [{ tag: 'span.comment' }],\r\n}\r\nexport default commentNodeSpec\r\n","import { MarkSpec, Mark } from 'prosemirror-model'\r\n\r\nconst highlightMarkSpec: MarkSpec = {\r\n  group: 'inline',\r\n  content: 'inline* text*',\r\n  inline: true,\r\n  selectable: true,\r\n  attrs: { color: { default: '#ff0000' } },\r\n  toDOM: (mark: Mark, inline: boolean) => {\r\n    const commentMark = document.createElement('span')\r\n    commentMark.classList.add('highlight')\r\n    commentMark.id = mark.attrs.id\r\n    commentMark.style.backgroundColor = mark.attrs.color\r\n    return commentMark\r\n  },\r\n  parseDOM: [{ tag: 'span.highlight' }],\r\n}\r\nexport default highlightMarkSpec\r\n","import { schema as basicSchema } from 'prosemirror-schema-basic'\r\nimport { Schema, NodeSpec, MarkSpec } from 'prosemirror-model'\r\nimport OrderedMap from 'orderedmap'\r\nimport commentNodeSpec from './nodes/commentNode'\r\nimport highlightMarkSpec from './marks/highlightMark'\r\n\r\nconst basicNodes = basicSchema.spec.nodes as OrderedMap<NodeSpec>\r\nconst basicMarks = basicSchema.spec.marks as OrderedMap<MarkSpec>\r\nconst nodes = basicNodes\r\nconst marks = basicMarks.append({\r\n  highlight: highlightMarkSpec,\r\n  comment: commentNodeSpec,\r\n})\r\n\r\nconst schema = new Schema({\r\n  nodes,\r\n  marks,\r\n})\r\n\r\nexport default schema\r\n","import MenuBar from './MenuBar'\r\n\r\nexport default MenuBar\r\n","import './MenuBar.scss'\r\nimport {\r\n  MouseEventHandler,\r\n  MutableRefObject,\r\n  useContext,\r\n  useState,\r\n} from 'react'\r\nimport { EditorView } from 'prosemirror-view'\r\nimport yContext from '../../contexts/yContext'\r\nimport { v4 as uuidv4 } from 'uuid'\r\n\r\ninterface MenuBarProps {\r\n  editorActions: { [key: string]: Function }\r\n  view: MutableRefObject<EditorView>\r\n}\r\nexport default function MenuBar({ editorActions, view }: MenuBarProps) {\r\n  const [highlightColor, setHighlightColor] = useState('#ffff00') // TODO: Add marker color selector\r\n  const { yProvider } = useContext(yContext)\r\n  const boldHandler: MouseEventHandler = (e) => {\r\n    editorActions.setMark('strong')\r\n    e.preventDefault()\r\n  }\r\n  const italicHandler: MouseEventHandler = (e) => {\r\n    editorActions.setMark('em')\r\n    e.preventDefault()\r\n  }\r\n  const paragraphHandler: MouseEventHandler = (e) => {\r\n    editorActions.setBlock('paragraph')\r\n    e.preventDefault()\r\n  }\r\n  const headingHandler: MouseEventHandler = (e) => {\r\n    editorActions.setBlock('heading')\r\n    e.preventDefault()\r\n  }\r\n  const commentHandler: MouseEventHandler = (e) => {\r\n    const user = yProvider.awareness.getLocalState()!.user\r\n    const text = prompt('Write Comment')\r\n    editorActions.setMark('comment', {\r\n      id: uuidv4(),\r\n      user,\r\n      text,\r\n    })\r\n    e.preventDefault()\r\n  }\r\n  const highlightHandler: MouseEventHandler = (e) => {\r\n    editorActions.setMark('highlight', {\r\n      color: highlightColor,\r\n    })\r\n    e.preventDefault()\r\n  }\r\n\r\n  return (\r\n    <div className=\"menuBar\">\r\n      <button\r\n        title=\"Bold\"\r\n        style={{ fontWeight: 'bold' }}\r\n        className=\"menuBtn\"\r\n        onClick={boldHandler}\r\n      >\r\n        B\r\n      </button>\r\n      <button\r\n        title=\"Italic\"\r\n        style={{ fontStyle: 'italic' }}\r\n        className=\"menuBtn\"\r\n        onClick={italicHandler}\r\n      >\r\n        I\r\n      </button>\r\n      <button title=\"Paragraph\" className=\"menuBtn\" onClick={paragraphHandler}>\r\n        P\r\n      </button>\r\n      <button title=\"Header\" className=\"menuBtn\" onClick={headingHandler}>\r\n        H\r\n      </button>\r\n      <button title=\"Marker\" className=\"menuBtn\" onClick={highlightHandler}>\r\n        🖌\r\n      </button>\r\n      <button title=\"Comment\" className=\"menuBtn\" onClick={commentHandler}>\r\n        💬\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n","import Comment from './Comment'\r\n\r\nexport default Comment\r\n","import './Comment.scss'\r\nimport { useEffect, useState, MutableRefObject } from 'react'\r\ninterface CommentProps {\r\n  parent: HTMLElement\r\n  viewHost: MutableRefObject<HTMLDivElement>\r\n  user: { id: number; color: string }\r\n  text: string\r\n}\r\n\r\nexport default function Comment({\r\n  parent,\r\n  viewHost,\r\n  user,\r\n  text,\r\n}: CommentProps) {\r\n  const [position, setPosition] = useState(getPos())\r\n\r\n  useEffect(() => {\r\n    setPosition(getPos())\r\n    const resizeListener = (e: UIEvent) => {\r\n      setPosition(getPos())\r\n    }\r\n    window.addEventListener('resize', resizeListener)\r\n    return () => window.removeEventListener('resize', resizeListener)\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  return (\r\n    <div\r\n      style={{ ...position, borderColor: user.color }}\r\n      className=\"commentCard\"\r\n    >\r\n      {text}\r\n    </div>\r\n  )\r\n\r\n  function getPos() {\r\n    const { top } = parent.getBoundingClientRect()\r\n    const { left: editorLeft } = viewHost.current.getBoundingClientRect()\r\n    return { top, left: editorLeft - 210 }\r\n  }\r\n}\r\n","import { Node } from 'prosemirror-model'\r\nimport { EditorView, NodeView } from 'prosemirror-view'\r\nimport { createPortal } from 'react-dom'\r\nimport { MutableRefObject, ReactPortal } from 'react'\r\nimport Comment from '../../components/Comment'\r\n\r\nexport class CommentView implements NodeView {\r\n  node\r\n  dom: HTMLElement | undefined\r\n  contentDOM: HTMLElement | undefined\r\n  view: EditorView\r\n  viewHost: MutableRefObject<HTMLDivElement>\r\n  portal: ReactPortal | undefined\r\n  addComment: (portal: ReactPortal) => void\r\n\r\n  constructor(\r\n    node: Node,\r\n    view: EditorView,\r\n    getPos: boolean | (() => number),\r\n    addComment: (portal: ReactPortal) => void,\r\n    viewHost: MutableRefObject<HTMLDivElement>,\r\n  ) {\r\n    this.node = node\r\n    this.view = view\r\n    this.addComment = addComment\r\n    this.viewHost = viewHost\r\n  }\r\n\r\n  init() {\r\n    this.dom = document.createElement('span')\r\n    this.dom.classList.add('comment')\r\n    this.dom.id = this.node.attrs.id\r\n    this.dom.style.borderColor = this.node.attrs.user.color\r\n    const commentCard = document.createElement('div')\r\n    commentCard.classList.add('comment-anchor')\r\n    document.body.append(commentCard)\r\n    const portal = createPortal(\r\n      <Comment\r\n        parent={this.dom as HTMLElement}\r\n        viewHost={this.viewHost}\r\n        user={this.node.attrs.user}\r\n        text={this.node.attrs.text}\r\n      />,\r\n      commentCard,\r\n      this.node.attrs.id,\r\n    )\r\n    this.portal = portal\r\n    this.addComment(portal)\r\n\r\n    return this\r\n  }\r\n}\r\n","import Editor from './Editor'\r\n\r\nexport default Editor\r\n","import './Editor.scss'\r\nimport schema from '../../prosemirror/schema'\r\nimport { EditorState } from 'prosemirror-state'\r\nimport { EditorView } from 'prosemirror-view'\r\nimport { keymap } from 'prosemirror-keymap'\r\nimport {\r\n  baseKeymap,\r\n  toggleMark,\r\n  setBlockType,\r\n  wrapIn,\r\n} from 'prosemirror-commands'\r\nimport {\r\n  useEffect,\r\n  useRef,\r\n  MutableRefObject,\r\n  useContext,\r\n  useState,\r\n  ReactPortal,\r\n} from 'react'\r\n\r\nimport MenuBar from '../MenuBar'\r\nimport {\r\n  ySyncPlugin,\r\n  yCursorPlugin,\r\n  yUndoPlugin,\r\n  undo,\r\n  redo,\r\n} from 'y-prosemirror'\r\nimport yContext from '../../contexts/yContext'\r\nimport { CommentView } from '../../prosemirror/nodeViews/CommentView'\r\n\r\nexport default function Editor() {\r\n  const viewHost = useRef() as MutableRefObject<HTMLDivElement>\r\n  const viewRef = useRef() as MutableRefObject<EditorView>\r\n  const { yProvider, yType } = useContext(yContext)\r\n  const [comments, setComments] = useState([] as ReactPortal[])\r\n\r\n  const addComment = (comment: ReactPortal) => {\r\n    comments.push(comment)\r\n    setComments([...comments])\r\n  }\r\n\r\n  useEffect(() => {\r\n    const state = EditorState.create({\r\n      schema,\r\n\r\n      plugins: [\r\n        ySyncPlugin(yType),\r\n        yCursorPlugin(yProvider.awareness),\r\n        yUndoPlugin(),\r\n        keymap({ 'mod-z': undo, 'mod-y': redo }),\r\n        keymap(baseKeymap),\r\n      ],\r\n    })\r\n    viewRef.current = new EditorView(viewHost.current, {\r\n      state,\r\n      nodeViews: {\r\n        comment(node, view, getPos) {\r\n          return new CommentView(\r\n            node,\r\n            view,\r\n            getPos,\r\n            addComment,\r\n            viewHost,\r\n          ).init()\r\n        },\r\n      },\r\n    })\r\n    const { current: view } = viewRef\r\n    view.focus()\r\n    return () => view.destroy()\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    console.log(comments)\r\n  }, [comments])\r\n\r\n  const editorActions = {\r\n    setMark(mark: string, attrs?: { [key: string]: any }) {\r\n      const { current: view } = viewRef\r\n      view.focus()\r\n      toggleMark(schema.marks[mark], attrs)(view.state, view.dispatch)\r\n    },\r\n    setBlock(node: 'paragraph' | 'heading', attrs?: { [key: string]: any }) {\r\n      const { current: view } = viewRef\r\n      view.focus()\r\n      setBlockType(schema.nodes[node], attrs)(view.state, view.dispatch)\r\n    },\r\n    wrapSelection(\r\n      node: 'comment' | 'someInline',\r\n      attrs?: { [key: string]: any },\r\n    ) {\r\n      const { current: view } = viewRef\r\n      view.focus()\r\n      wrapIn(schema.nodes[node], attrs)(view.state, view.dispatch)\r\n    },\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <MenuBar editorActions={editorActions} view={viewRef} />\r\n      <div className=\"editor\" ref={viewHost} />\r\n      {comments}\r\n    </>\r\n  )\r\n}\r\n","import Main from './Main'\r\n\r\nexport default Main\r\n","import Editor from '../../components/Editor'\r\n\r\nexport default function Main() {\r\n  return (\r\n    <>\r\n      <Editor />\r\n    </>\r\n  )\r\n}\r\n","import './App.scss'\nimport Header from './components/Header'\nimport Main from './pages/Main'\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Main />\n    </div>\n  )\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\nimport reportWebVitals from './reportWebVitals'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n)\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals()\r\n"],"sourceRoot":""}